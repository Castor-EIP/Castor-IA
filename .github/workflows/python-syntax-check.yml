name: V√©rification de la syntaxe Python

on:
  push:
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  check-python-syntax:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout du code
      uses: actions/checkout@v4
      
    - name: Configuration de Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Recherche des fichiers Python
      id: find-python-files
      run: |
        echo "üîç Recherche des fichiers Python dans le projet..."
        python_files=$(find . -name "*.py" -type f | grep -v __pycache__ | sort)
        
        if [ -z "$python_files" ]; then
          echo "‚ö†Ô∏è  Aucun fichier Python trouv√© dans le projet"
          echo "has_python_files=false" >> $GITHUB_OUTPUT
        else
          echo "üìã Fichiers Python d√©tect√©s:"
          echo "$python_files"
          echo "has_python_files=true" >> $GITHUB_OUTPUT
          
          # Sauvegarder la liste des fichiers pour les √©tapes suivantes
          echo "$python_files" > python_files_list.txt
        fi
        
    - name: V√©rification de la syntaxe Python avec py_compile
      if: steps.find-python-files.outputs.has_python_files == 'true'
      run: |
        echo "üêç V√©rification de la syntaxe Python avec py_compile..."
        
        syntax_errors=0
        total_files=0
        
        while IFS= read -r file; do
          if [ -n "$file" ]; then
            total_files=$((total_files + 1))
            echo "üìÑ V√©rification de: $file"
            
            if python -m py_compile "$file" 2>/dev/null; then
              echo "  ‚úÖ Syntaxe correcte"
            else
              echo "  ‚ùå Erreur de syntaxe d√©tect√©e!"
              python -m py_compile "$file" 2>&1 | sed 's/^/    /'
              syntax_errors=$((syntax_errors + 1))
            fi
            echo ""
          fi
        done < python_files_list.txt
        
        echo "üìä R√©sum√© de la v√©rification py_compile:"
        echo "- Total de fichiers v√©rifi√©s: $total_files"
        echo "- Fichiers avec erreurs: $syntax_errors"
        echo "- Fichiers corrects: $((total_files - syntax_errors))"
        
        if [ $syntax_errors -gt 0 ]; then
          echo ""
          echo "‚ùå $syntax_errors fichier(s) contiennent des erreurs de syntaxe!"
          exit 1
        else
          echo ""
          echo "üéâ Tous les fichiers Python ont une syntaxe correcte!"
        fi
        
    - name: V√©rification avec flake8 (optionnel)
      if: steps.find-python-files.outputs.has_python_files == 'true'
      run: |
        echo "ÔøΩ Installation et utilisation de flake8 pour v√©rification suppl√©mentaire..."
        pip install flake8
        
        echo "üìä V√©rification avec flake8 (syntaxe et style basique)..."
        if flake8 --select=E9,F63,F7,F82 --show-source --statistics $(cat python_files_list.txt); then
          echo "‚úÖ Aucune erreur de syntaxe critique d√©tect√©e par flake8"
        else
          echo "‚ùå Des erreurs critiques ont √©t√© d√©tect√©es par flake8"
          exit 1
        fi
        
    - name: Test d'import des modules
      if: steps.find-python-files.outputs.has_python_files == 'true'
      run: |
        echo "ÔøΩ Test d'import des modules Python..."
        
        import_errors=0
        
        while IFS= read -r file; do
          if [ -n "$file" ]; then
            echo "üìÑ Test d'import pour: $file"
            
            # Essayer d'importer le module
            module_path=$(echo "$file" | sed 's|./||' | sed 's|/|.|g' | sed 's|.py||')
            
            if python -c "import sys; sys.path.insert(0, '.'); import $module_path" 2>/dev/null; then
              echo "  ‚úÖ Import r√©ussi"
            else
              echo "  ‚ö†Ô∏è  Import √©chou√© (peut √™tre normal si d√©pendances manquantes)"
              import_errors=$((import_errors + 1))
            fi
          fi
        done < python_files_list.txt
        
        echo ""
        echo "üìä R√©sum√© des tests d'import:"
        echo "- Imports √©chou√©s: $import_errors (normal si d√©pendances externes)"
        
    - name: Rapport de syntaxe
      if: always() && steps.find-python-files.outputs.has_python_files == 'true'
      run: |
        echo "üìã G√©n√©ration du rapport de syntaxe..."
        
        echo "# üêç Rapport de v√©rification syntaxe Python" > syntax_report.md
        echo "" >> syntax_report.md
        echo "## üìä R√©sum√©" >> syntax_report.md
        echo "" >> syntax_report.md
        
        if [ -f python_files_list.txt ]; then
          file_count=$(wc -l < python_files_list.txt)
          echo "- **Fichiers Python analys√©s:** $file_count" >> syntax_report.md
        fi
        
        echo "- **Date d'analyse:** $(date)" >> syntax_report.md
        echo "- **Branche:** ${{ github.ref_name }}" >> syntax_report.md
        echo "- **Commit:** ${{ github.sha }}" >> syntax_report.md
        echo "" >> syntax_report.md
        
        echo "## üìÅ Fichiers analys√©s" >> syntax_report.md
        echo "" >> syntax_report.md
        echo '```' >> syntax_report.md
        if [ -f python_files_list.txt ]; then
          cat python_files_list.txt >> syntax_report.md
        fi
        echo '```' >> syntax_report.md
        
        echo "" >> syntax_report.md
        echo "## ‚úÖ V√©rifications effectu√©es" >> syntax_report.md
        echo "" >> syntax_report.md
        echo "1. **py_compile** - Compilation Python standard" >> syntax_report.md
        echo "2. **flake8** - V√©rification des erreurs critiques" >> syntax_report.md
        echo "3. **Test d'import** - V√©rification des imports de base" >> syntax_report.md
        
        cat syntax_report.md
        
    - name: Upload du rapport de syntaxe
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: python-syntax-report
        path: syntax_report.md
